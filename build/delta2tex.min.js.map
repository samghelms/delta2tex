{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1ebb04376ee706155ef5","webpack:///./src/actions.js","webpack:///./src/formatter.js","webpack:///./delta2tex.js","webpack:///./src/transitionParser.js","webpack:///./src/grammar.js","webpack:///./src/transitionTable.js","webpack:///./src/preprocessor.js","webpack:///./src/mappings.js","webpack:///./tex/headers.js"],"names":["actions","SHIFT","COMBINE","FINAL","CREATE_BLOCK","Formatter","fnList","el","argss","fns","name","fmtrArgs","fmtr","args","otherFmtr","Object","entries","fn","text","keys","pos","filtered","filter","k","v","hasOwnProperty","newFmtr","codeBlockFormatter","console","log","scriptFormatter","Error","headerFormatter","extractVals","val","length","formatters","formula","value","script","header","formatter","key","newlineFormatters","newlineNumber","Array","from","x","i","join","getSpaceFormatting","keysFiltered","parse","delta","deltaCleaned","flatMap","push","parsed","label","data","module","exports","oracle","state","q","END","topType","prevType","apply_t","transition","parser","newlineCt","finalFlag","grammarObj","block","newline","insert","attributes_block","attributes_inline","endfile","grammar","label1","label2","inner","concatObj","atomNext","atomTop","formatInline","merge","nxtFmtr","topFmtr","startFmtr","subtract","endFmtr","blockLabels","sep","formatBlock","concat","nextType","combine","pop","combined","shift","newAtom","end","lastType","lastAtom","finalText","transitionTable","prototype","lambda","apply","map","handleNewLines","split","ret","slice","s","processAtom","includes","objKey","objVal","inner_key","_","parserPrep","mapping","list","mappings","footer"],"mappings":"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","file":"delta2tex.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"delta2tex\"] = factory();\n\telse\n\t\troot[\"delta2tex\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1ebb04376ee706155ef5","const actions = {\n\tSHIFT: \"SHIFT\",\n\tCOMBINE: \"COMBINE\",\n\tFINAL: \"FINAL\",\n\tCREATE_BLOCK: \"CREATE_BLOCK\"\n}\n\nexport default actions\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","// import {attributeTypes} from './types'\nexport class Formatter {\n\t/*\n\tTODO: add a method to make sure identical functions don't get added. This\n\tmethod will also allow the ability to check whether or not two sections can be combined \n\tlater on.\n\t*/\n\tconstructor(fnList = [[\"none\", [(el, argss)=>el, \"none\"]]]) {\n\t\tthis.fns = {}\n\t\tfor(let el of fnList) {\n\t\t\tconst [name, fmtrArgs ] = el\n\t\t\tconst [fmtr, args] = fmtrArgs\n\t\t\tthis.fns[name]=[fmtr, args]\n\t\t} \n\t}\n\tmerge(otherFmtr) {\n\t\tconst fns = [...Object.entries(this.fns), ...Object.entries(otherFmtr.fns)]\n\t\treturn new Formatter(fns)\n\t}\n\n\tadd(fn) {\n\t\tthis.fns = [...this.fns, fn]\n\t}\n\n\tformatInline(text) {\n\t\tfor (let name of Object.keys(this.fns)) {\n\t\t\tconst [fn, args, ] = this.fns[name]\n\t\t\ttext = fn(text, args)\n\t\t}\n\t\treturn text\n\t}\n\n\tformatBlock(text, pos) {\n\t\tfor (let name of Object.keys(this.fns)) {\n\t\t\tconst [fn, args, ] = this.fns[name]\n\t\t\ttext = fn(text, args, pos)\n\t\t}\n\t\treturn text\n\t}\n\n\tsubtract(otherFmtr) {\n\t\t/*\n\t\tTakes formatters in the other formatter out of this one.\n\t\t*/\n\t\tconst filtered = Object.entries(this.fns).filter((el)=>{\n\t\t\t\tconst [k, v] = el\n\t\t\t\treturn !otherFmtr.fns.hasOwnProperty(k)\n\t\t\t})\n\t\tconst newFmtr = new Formatter(filtered)\n\t\treturn newFmtr\n\t}\n\n}\n\nconst codeBlockFormatter = (text, args, pos) => {\n\tconsole.log(\"code block\")\n\tif(pos === \"start\") {\n\t\tconsole.log(\"start called\")\n\t\treturn \"\\\\begin{lstlisting}\\n\"+text\n\t} else {\n\t\treturn text+\" \\n\\\\end{lstlisting}\"\n\t}\t\n}\n\nconst scriptFormatter = (text, args) => {\n\tif(args === \"super\") {\n\t\treturn \"\\\\textsuperscript{\"+text+\"}\"\n\t} else if (args === \"sub\") {\n\t\treturn \"\\\\textsubscript{\"+text+\"}\"\n\t} else {\n\t\tthrow new Error(\"unknown argument \"+args+\" to scriptFormatter\")\n\t}\n}\n\nconst headerFormatter = (text, args) => {\n\treturn \"HEADER\"+text+\"HEADER\"\n}\n\nconst extractVals = (val) => {\n\tconst entries = Object.entries(val)\n\tif(entries.length !== 1) { throw new Error(\"invalid val passed to Formatter\")}\n\treturn entries[0]\n}\n\nconst formatters = {\n\tformula: (value)=>\"$$ \"+value+\" $$\",\n\t'code-block': (value)=> {\n\t\tconst [name, args] = extractVals(value)\n\t\treturn new Formatter([[name, [codeBlockFormatter, args]]])\n\t},\n\tscript: (value)=> {\n\t\tconst [name, args] = extractVals(value)\n\t\treturn new Formatter([[name, [scriptFormatter, args]]])\n\t},\n\theader: (value)=> {\n\t\tconst [name, args] = extractVals(value)\n\t\treturn new Formatter([[name, [headerFormatter, args]]])\n\t},\n\n}\n\nexport const formatter = (key) => {\n\tif (formatters.hasOwnProperty(key)) {\n\t\treturn formatters[key]\n\t} else {\n\t\tthrow \"cannot format type \"+key;\n\t}\n}\n\nconst newlineFormatters = {\n\t/*\n\tDefine special rules for spacing within blocks here\n\t*/\n\t'_default-space-provider': (newlineNumber)=> \"\\n\\\\vspace{\"+newlineNumber+\"mm}\\n\",\n\t'code-block': (newlineNumber)=> Array.from({length: newlineNumber}, (x,i) => \"\\n\").join(\"\")\n\n}\n\nexport const getSpaceFormatting = (keys) => {\n\t/*\n\tTODO: update this for nested space formatters (probably not going to be an issue)\n\t*/\n\tlet key\n\tconst keysFiltered = keys.filter(k=>newlineFormatters.hasOwnProperty(k))\n\tif(keysFiltered.length > 1) {\n\t\tthrow new Error(\"error, have not implemented nested space formatters for getSpaceFormatting() yet\")\n\t} else if(keysFiltered.length === 1 ) {\n\t\tkey = keys[0]\n\t} else {\n\t\tkey = \"_default-space-provider\"\n\t}\n\tif (newlineFormatters.hasOwnProperty(key)) {\n\t\treturn newlineFormatters[key]\n\t} else {\n\t\tthrow new Error(\"error, with getSpaceFormatting(), check newlineFormatters and program logic\")\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatter.js","import parser from './src/transitionParser'\nimport {parserPrep} from './src/preprocessor'\nimport {header, footer} from './tex/headers'\n\nconst parse = (delta) => {\n\tconst deltaCleaned = delta[\"ops\"].flatMap(el=>Object.entries(el).flatMap(parserPrep))\n\tdeltaCleaned.push([\"endfile\", \"\"])\n\tconst parsed = parser(deltaCleaned)\n\tconst [label, text] = parsed[0]\n\treturn header.data+text+footer.data\n}\n\nmodule.exports = {\n    parse\n};\n\n\n// WEBPACK FOOTER //\n// ./delta2tex.js","import {grammar} from './grammar'\nimport {transitionTable} from './transitionTable'\nimport actions from './actions'\n\nconst oracle = (state) => {\n\t/*\n\tReturns the correct action to take\n\t*/\n\n\tif (state.q.length < 2) {\n\t\tif (state.delta.length < 1) {return actions.END}\n\t\treturn actions.SHIFT\n\t} \n\tlet [topType, ] = state.q[state.q.length-1]\n\tlet [prevType, ] = state.q[state.q.length-2]\n\n\t// if (state.delta.length < 1) {\n\t// \tif (topType === \"block\" && prevType === \"block\") {\n\t// \t\treturn actions.END\n\t// \t}\n\t// }\n\n\treturn grammar(prevType, topType)\n}\n\nconst apply_t = (state, transition) => {\n\t/*\n\tReturns the correct action to take\n\t*/\n\n\treturn transitionTable[transition](state)\n}\n\nconst parser = (delta) => {\n\t// TODO: find a more elegent way of dealing with the root\n\tlet state = {q:[[\"block\", { text: '', newlineCt: 0 }]], delta: delta, finalFlag: false}\n\tlet transition \n\tlet i = 0\n\twhile(!state.finalFlag) {\t\t\n\t\ttransition = oracle(state)\n\t\tstate = apply_t(state, transition)\n\t}\n\n\treturn state[\"q\"]\n}\n\nexport default parser\n\n\n// WEBPACK FOOTER //\n// ./src/transitionParser.js","import actions from './actions'\n\nconst grammarObj = {\n\tblock: {\n\t\tblock: actions.COMBINE,\n\t\tnewline: actions.COMBINE,\n\t\tinsert: actions.SHIFT,\n\t\tattributes_block: actions.COMBINE,\n\t\tattributes_inline: actions.COMBINE,\n\t\tendfile: actions.END,\n\t},\n\tinsert: {\n\t\tinsert: actions.COMBINE,\n\t\tattributes_block: actions.COMBINE,\n\t\tnewline: actions.COMBINE,\n\t\tendfile: actions.COMBINE,\n\t\tattributes_inline: actions.COMBINE\n\t},\n\tattributes_inline: {\n\t\tinsert: actions.COMBINE,\n\t\tattributes_inline: actions.COMBINE\n\t},\n\n}\n\nexport const grammar = (label1, label2)  => {\n\tif (grammarObj.hasOwnProperty(label1)) {\n\t\tconst inner = grammarObj[label1]\n\t\tif(inner.hasOwnProperty(label2)) {\n\t\t\treturn grammarObj[label1][label2]\n\t\t}\n\t} \n\tthrow new Error(\"sequence [\"+label1+\", \"+label2+\"] not in grammar\")\n\treturn null\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/grammar.js","import actions from './actions'\nimport {Formatter, getSpaceFormatting} from './formatter'\n\nconst concatObj = {\n\tinsert: {\n\t\tinsert: (atomNext, atomTop) => [\"insert\", atomNext+atomTop],\n\t\tnewline: (atomNext, atomTop) => [\"block\", {text: atomNext, newlineCt: 1}],\n\t\tattributes_block: (atomNext, atomTop) => [\"block\", {text: atomNext, formatters: atomTop, newlineCt: 0}],\n\t\tendfile: (atomNext, atomTop) => [\"block\", {text: atomNext, newlineCt: 0}],\n\t\tattributes_inline: (atomNext, atomTop) => [\"insert\", atomTop.formatInline(atomNext)],\n\t},\n\tblock: {\n\t\tnewline: (atomNext, atomTop) => [\"block\", {...atomNext, newlineCt: atomNext.newlineCt+1}],\n\t\tattributes_block: (atomNext, atomTop) => [\"block\", {...atomNext, text: atomNext.text, formatters: atomNext.formatters.merge(atomTop) }],\n\t\tattributes_inline: (atomNext, atomTop) => [\"block\", atomTop.formatInline(atomNext)],\n\t\tblock: (atomNext, atomTop) => {\n\t\t\tconst nxtFmtr = atomNext.formatters? atomNext.formatters: new Formatter()\n\t\t\tconst topFmtr = atomTop.formatters? atomTop.formatters: new Formatter()\n\t\t\t// topFmtr needs to know if it is inside of something already, and nxtFmtr needs to know whether to end blocks or not\n\t\t\t// if inside of something, don't place a new start (remove the formatter)\n\t\t\tconst startFmtr = topFmtr.subtract(nxtFmtr)\n\t\t\t// We don't need to place an end statement if the top is a continutation\n\t\t\tconst endFmtr = nxtFmtr.subtract(topFmtr)\n\n\t\t\tconst blockLabels = Object.keys(topFmtr.fns).filter(k=>nxtFmtr.fns.hasOwnProperty(k))\n\t\t\tconst sep = getSpaceFormatting(blockLabels)(atomNext.newlineCt)\n\n\t\t\tconst text = endFmtr.formatBlock(atomNext.text, \"end\")+sep+startFmtr.formatBlock(atomTop.text, \"start\")\n\n\t\t\treturn [\"block\", {text:text, formatters: topFmtr, newlineCt: atomTop.newlineCt}]\n\t\t},\n\t},\n\n\tattributes_inline: {\n\t\tattributes_inline: (atomNext, atomTop) => [\"attributes_inline\", atomNext.merge(atomTop)],\n\t\tinsert: (atomNext, atomTop) => [\"insert\", atomNext.formatInline(atomTop)],\n\t}\n} \n\nconst concat = (nextType, topType) => {\n\tif (concatObj.hasOwnProperty(nextType)) {\n\t\tconst inner = concatObj[nextType]\n\t\tif(inner.hasOwnProperty(topType)) {\n\t\t\treturn concatObj[nextType][topType]\n\t\t}\n\t} \n\tthrow new Error(\"sequence [\"+nextType+\", \"+topType+\"] not in concat rules\")\n\treturn null\n}\n\nconst combine = (state) => {\n\tconst [topType, atomTop, ] = state.q.pop()\n\tconst [nextType, atomNext, ] = state.q.pop()\n\tconst combined = concat(nextType,topType)(atomNext, atomTop)\n\tstate.q.push(combined)\n\treturn {...state}\n}\n\nconst shift = (state) => {\n\tconst newAtom = state.delta.shift()\n\tstate.q.push(newAtom)\n\treturn {...state}\n}\n\nconst end = (state) => {\n\tlet [lastType, lastAtom, ] = state.q.pop()\n\tif (lastType === \"endfile\") {\n\t\t[lastType, lastAtom, ] = state.q.pop()\n\t}\n\tif(lastType !== \"block\") {throw new Error(\"last type should be block, incorrect parsing\")}\n\n\tconst endFmtr = lastAtom.formatters? lastAtom.formatters: new Formatter()\n\tconst finalText = endFmtr.formatBlock(lastAtom.text, \"end\")\n\tstate.q.push([\"final\", finalText])\n\n\tstate.finalFlag = true\n\treturn {...state}\n}\n\nexport const transitionTable = {\n\t[actions.COMBINE]: combine,\n\t[actions.SHIFT]: shift,\n\t[actions.END]: end,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/transitionTable.js","import {formatter} from './formatter'\nimport {mappings} from './mappings'\n\nArray.prototype.flatMap = function(lambda) { \n    return Array.prototype.concat.apply([], this.map(lambda))\n}\n\nconst handleNewLines = (split) => {\n\tlet ret = []\n\tfor (let s of split.slice(0, split.length-1)) {\n\t\tif (s !== \"\") {\n\t\t\tret.push([\"insert\", s])\n\t\t}\n\t\tret.push([\"newline\", \"\"])\n\t}\n\tif (split[split.length-1] !== \"\") {\n\t\tret.push([\"insert\", split[split.length-1]])\n\t}\n\treturn ret\n}\n\nconst processAtom = (key, val) => {\n\tif (key === \"insert\") {\n\t\tif (typeof val === \"string\" ) {\n\t\t\tif (val.includes(\"\\n\")) {\n\t\t\t\tconst split = val.split(/\\n/g)\n\t\t\t\treturn handleNewLines(split)\n\t\t\t} else {\n\t\t\t\treturn [[key, val]]\n\t\t\t}\n\t\t} else if(typeof val === \"object\") {\n\t\t\tif(Object.entries(val).length !== 1) {\n\t\t\t\tthrow new Error(\"cannot handle insert type \") // TODO: state insert type\n\t\t\t}\n\t\t\tconst [objKey, objVal, ] = Object.entries(val)[0]\n\t\t\treturn [[key, formatter(objKey)(objVal)]]\n\t\t}\n\t} else if (key === \"attributes\" && typeof val === \"object\" ) {\n\t\tconst [inner_key, _, ] = Object.keys(val)\n\t\treturn [[mappings(inner_key), formatter(inner_key)(val)]]\n\t} \n\n\tthrow new Error(\"unkown type of atom\")\n} \n\nexport const parserPrep = (el) => {\n\tel = processAtom(...el)\n\treturn el\n}\n\n\n// WEBPACK FOOTER //\n// ./src/preprocessor.js","\n\nconst mapping = {\n\t\"code-block\": \"attributes_block\",\n\tlist: \"attributes_block\"\n}\n\nexport const mappings = (label)  => {\n\tif (mapping.hasOwnProperty(label)) {\n\t\treturn mapping[label]\n\t} else {\n\t\treturn \"attributes_inline\"\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mappings.js","export const footer = {data: \"\\n\\\\end{document}\"}\nexport const header = {\ndata: \n`\\\\documentclass[12pt]{article}\n\\\\usepackage[margin=1in]{geometry} \n\\\\usepackage{amsmath,amsthm,amssymb,amsfonts}\n\\\\usepackage{listings}\n%If you want to title your bold things something different just make another thing exactly like this but replace \"problem\" with the name of the thing you want, like theorem or lemma or whatever\n \n\\\\begin{document}\\n`\n\n}\n\n\n// WEBPACK FOOTER //\n// ./tex/headers.js"],"sourceRoot":""}